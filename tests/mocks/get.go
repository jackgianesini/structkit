package mocks

import (
	"github.com/kitstack/structkit"
	"github.com/stretchr/testify/mock"
)

// FakeGet is an autogenerated mock type for the FakeGet type
type FakeGet struct {
	mock.Mock
}

// Execute provides a mock function with given fields: source, field, opt
func (_m *FakeGet) Execute(source any, field string, opt ...*structkit.Option) any {
	_va := make([]any, len(opt))
	for _i := range opt {
		_va[_i] = opt[_i]
	}
	var _ca []any
	_ca = append(_ca, source, field)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 any
	if rf, ok := ret.Get(0).(func(any, string, ...*structkit.Option) any); ok {
		r0 = rf(source, field, opt...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0)
		}
	}

	return r0
}

type mockConstructorTestingTNewGet interface {
	mock.TestingT
	Cleanup(func())
}

// NewFakeGet creates a new instance of FakeGet. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFakeGet(t mockConstructorTestingTNewGet) *FakeGet {
	fakeGetMock := &FakeGet{}
	fakeGetMock.Mock.Test(t)

	t.Cleanup(func() { fakeGetMock.AssertExpectations(t) })

	return fakeGetMock
}
